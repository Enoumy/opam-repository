opam-version: "2.0"
maintainer: "Jane Street developers"
authors: ["Jane Street Group, LLC"]
homepage: "https://github.com/janestreet/hardcaml_verify"
bug-reports: "https://github.com/janestreet/hardcaml_verify/issues"
dev-repo: "git+https://github.com/janestreet/hardcaml_verify.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/hardcaml_verify/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"                 {>= "4.14.0"}
  "base"                  {= "v0.16~preview.128.14+51"}
  "hardcaml"              {= "v0.16~preview.128.14+51"}
  "hardcaml_waveterm"     {= "v0.16~preview.128.14+51"}
  "ppx_deriving_hardcaml" {= "v0.16~preview.128.14+51"}
  "ppx_jane"              {= "v0.16~preview.128.14+51"}
  "stdio"                 {= "v0.16~preview.128.14+51"}
  "dune"                  {>= "2.0.0"}
  "re"                    {>= "1.8.0"}
]
available: arch != "arm32" & arch != "x86_32"
synopsis: "Hardcaml Verification Tools"
description: "
Tools for verifying properties of Hardcaml circuits.

Combinational circuits can be converted to 'conjunctive normal form' for input into SAT
solvers via DIMAC files. Support for a few opensource solvers is integrated - minisat,
picosat, Z3 - just ensure they are in your PATH.

Circuits can also be converted to NuSMV format for advanced bounded and unbounded model
checking tasks.
"
url {
src: "https://github.com/janestreet/hardcaml_verify/archive/89bdade5a038b62f5d9c5e80bc37e39f442c47a5.tar.gz"
checksum: "sha256=388307c396b1b45d9ffd80f510a6e92fefdd4bafacec6d97c5eb40840fd3e65e"
}
