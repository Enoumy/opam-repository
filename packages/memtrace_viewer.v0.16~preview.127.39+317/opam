opam-version: "2.0"
maintainer: "opensource@janestreet.com"
authors: ["Jane Street Group, LLC <opensource@janestreet.com>"]
homepage: "https://github.com/janestreet/memtrace_viewer"
bug-reports: "https://github.com/janestreet/memtrace_viewer/issues"
dev-repo: "git+https://github.com/janestreet/memtrace_viewer.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/memtrace_viewer/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"               {>= "4.11.0"}
  "async_js"            {= "v0.16~preview.127.39+317"}
  "async_kernel"        {= "v0.16~preview.127.39+317"}
  "async_rpc_kernel"    {= "v0.16~preview.127.39+317"}
  "bonsai"              {= "v0.16~preview.127.39+317"}
  "core_kernel"         {= "v0.16~preview.127.39+317"}
  "ppx_jane"            {= "v0.16~preview.127.39+317"}
  "async_rpc_websocket" {= "v0.16~preview.127.39+317"}
  "virtual_dom"         {= "v0.16~preview.127.39+317"}
  "dune"                {>= "2.0.0"}
  "js_of_ocaml-ppx"
  "memtrace"
  "ocaml-embed-file"    {= "v0.16~preview.127.39+317"}
]
synopsis: "Interactive memory profiler based on Memtrace"
description: "
Processes traces produced by the Memtrace library and displays the
top allocators in a table or flame graph. To help find space leaks,
events can be filtered by lifetime, showing only allocations of
objects that are still live at peak memory usage.
"
url {
src: "https://github.com/janestreet/memtrace_viewer/archive/c5f7d004ab354d7c5922d669fd3978265d8bd49f.tar.gz"
checksum: "sha256=9f5db3fff20a76ed3f296a3757d666dbc711d56c0f1a62999b2b524f3c71b8c2"
}
