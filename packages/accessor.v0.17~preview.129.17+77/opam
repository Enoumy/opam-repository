opam-version: "2.0"
maintainer: "Jane Street developers"
authors: ["Jane Street Group, LLC"]
homepage: "https://github.com/janestreet/accessor"
bug-reports: "https://github.com/janestreet/accessor/issues"
dev-repo: "git+https://github.com/janestreet/accessor.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/accessor/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"         {>= "5.1.0"}
  "base"          {= "v0.17~preview.129.17+77"}
  "higher_kinded" {= "v0.17~preview.129.17+77"}
  "ppx_jane"      {= "v0.17~preview.129.17+77"}
  "dune"          {>= "3.11.0"}
]
available: arch != "arm32" & arch != "x86_32"
synopsis: "A library that makes it nicer to work with nested functional data structures"
description: "
An accessor is a value that understands how to reach data within a larger data structure,
independently from what you intend to do with it. Accessors allow you to read and write
data and perform possibly-monadic traversals. By composing accessors, you can work with
increasingly complex data structures.

In case you have ever heard of \"lenses\", this is an OCaml implementation of that idea.
"
url {
src: "https://github.com/janestreet/accessor/archive/e2155ad74288095b316b5a66f2f6776043d521fe.tar.gz"
checksum: "sha256=4561dd82b53f6f6df8e01c2ee2c9e32db1105d3b8ffeffe482e54ef66797b0a2"
}
