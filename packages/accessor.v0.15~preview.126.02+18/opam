opam-version: "2.0"
maintainer: "opensource@janestreet.com"
authors: ["Jane Street Group, LLC <opensource@janestreet.com>"]
homepage: "https://github.com/janestreet/accessor"
bug-reports: "https://github.com/janestreet/accessor/issues"
dev-repo: "git+https://github.com/janestreet/accessor.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/accessor/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"         {>= "4.09.0"}
  "base"          {= "v0.15~preview.126.02+18"}
  "higher_kinded" {= "v0.15~preview.126.02+18"}
  "ppx_jane"      {= "v0.15~preview.126.02+18"}
  "dune"          {>= "2.0.0"}
]
synopsis: "A library that makes it nicer to work with nested functional data structures"
description: "
An accessor is a value that understands how to reach data within a larger data structure,
independently from what you intend to do with it. Accessors allow you to read and write
data and perform possibly-monadic traversals. By composing accessors, you can work with
increasingly complex data structures.

In case you have ever heard of \"lenses\", this is an OCaml implementation of that idea.
"
url {
src: "https://github.com/janestreet/accessor/archive/fa4bdf1b7853f894d5c239b557af32de575b12e3.tar.gz"
checksum: "sha256=a52930a40e8cac3dbafd5d0676f08240c9170cb9d019f93050ec584d896136f6"
}
