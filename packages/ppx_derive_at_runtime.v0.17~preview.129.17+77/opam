opam-version: "2.0"
maintainer: "Jane Street developers"
authors: ["Jane Street Group, LLC"]
homepage: "https://github.com/janestreet/ppx_derive_at_runtime"
bug-reports: "https://github.com/janestreet/ppx_derive_at_runtime/issues"
dev-repo: "git+https://github.com/janestreet/ppx_derive_at_runtime.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_derive_at_runtime/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"                    {>= "5.1.0"}
  "base"                     {= "v0.17~preview.129.17+77"}
  "expect_test_helpers_core" {= "v0.17~preview.129.17+77"}
  "ppx_jane"                 {= "v0.17~preview.129.17+77"}
  "dune"                     {>= "2.0.0"}
  "ppxlib"                   {>= "0.28.0"}
]
available: arch != "arm32" & arch != "x86_32"
synopsis: "Define a new ppx deriver by naming a runtime module."
description: "

Allows specifying new ppx derivers much more easily than writing
a ppx by hand. For example, to get `[@@deriving foo]`, you only have to
specify a module path such as `My_library.Foo`.
"
url {
src: "https://github.com/janestreet/ppx_derive_at_runtime/archive/d3e435e3487444e497a466bb5f9b2647676cb57c.tar.gz"
checksum: "sha256=3b72bedcbd3c0e281641c0d6aeea5e98afc58be77dc62625f5b87df003ef539c"
}
