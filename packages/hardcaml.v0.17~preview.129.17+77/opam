opam-version: "2.0"
maintainer: "Jane Street developers"
authors: ["Jane Street Group, LLC"]
homepage: "https://github.com/janestreet/hardcaml"
bug-reports: "https://github.com/janestreet/hardcaml/issues"
dev-repo: "git+https://github.com/janestreet/hardcaml.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/hardcaml/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"         {>= "5.1.0"}
  "base"          {= "v0.17~preview.129.17+77"}
  "bin_prot"      {= "v0.17~preview.129.17+77"}
  "core_kernel"   {= "v0.17~preview.129.17+77"}
  "ppx_jane"      {= "v0.17~preview.129.17+77"}
  "ppx_sexp_conv" {= "v0.17~preview.129.17+77"}
  "stdio"         {= "v0.17~preview.129.17+77"}
  "dune"          {>= "2.0.0"}
  "ppxlib"        {>= "0.28.0"}
  "zarith"        {>= "1.11"}
]
available: arch != "arm32" & arch != "x86_32"
synopsis: "RTL Hardware Design in OCaml"
description: "
Hardcaml is an embedded DSL for designing and simulating hardware in OCaml.
Generic hardware designs are easily expressed using features such as higher
order functions, lists, maps etc.  A built in simulator allows designs to
be simulated within Hardcaml.  Designs are converted to either Verilog or
VHDL to interact with standard back end tooling.
"
url {
src: "https://github.com/janestreet/hardcaml/archive/d2df3842b5462ecdf4e909be4800e2a046be4b9a.tar.gz"
checksum: "sha256=ebec00d2ccc497855b7cbed4bc993e04af9ffd3bb2300b67f8f28192450f80c2"
}
