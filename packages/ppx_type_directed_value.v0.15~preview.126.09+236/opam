opam-version: "2.0"
maintainer: "opensource@janestreet.com"
authors: ["Jane Street Group, LLC <opensource@janestreet.com>"]
homepage: "https://github.com/janestreet/ppx_type_directed_value"
bug-reports: "https://github.com/janestreet/ppx_type_directed_value/issues"
dev-repo: "git+https://github.com/janestreet/ppx_type_directed_value.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_type_directed_value/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"    {>= "4.08.0"}
  "base"     {= "v0.15~preview.126.09+236"}
  "ppx_jane" {= "v0.15~preview.126.09+236"}
  "dune"     {>= "2.0.0"}
  "ppxlib"   {>= "0.23.0"}
]
synopsis: "Get [@@deriving]-style generation of type-directed values without writing a ppx"
description: "
`Ppx_type_directed_value` is a ppx that does `[@@deriving]`-style
generation of type-directed values based on user-provided modules. The
user-provided modules tell `ppx_type_directed_value` how to compose
type-directed values (for example, combine type-directed values of the
fields of a record to form a type-directed value for the record
itself).

This allows a wide variety of PPXs such as `ppx_sexp_conv`,
`ppx_compare`, `ppx_enumerate`, etc. to be implemented with
`ppx_type_directed_value`, but with some runtime cost.

This PPX currently supports deriving type-directed values for records, ordinary
& polymorphic variants and tuples. It also supports custom user-defined attributes
on record and variant fields.
"
url {
src: "https://github.com/janestreet/ppx_type_directed_value/archive/035de08fc3a03fedf22639623e1b9c1214b8243d.tar.gz"
checksum: "sha256=ab7e0099a968d020c47989df817db881c1deb4ad2d42bc2441b919b3e290e2e3"
}
