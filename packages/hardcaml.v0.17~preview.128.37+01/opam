opam-version: "2.0"
maintainer: "Jane Street developers"
authors: ["Jane Street Group, LLC"]
homepage: "https://github.com/janestreet/hardcaml"
bug-reports: "https://github.com/janestreet/hardcaml/issues"
dev-repo: "git+https://github.com/janestreet/hardcaml.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/hardcaml/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"            {>= "4.14.0"}
  "base"             {= "v0.17~preview.128.37+01"}
  "bin_prot"         {= "v0.17~preview.128.37+01"}
  "core_kernel"      {= "v0.17~preview.128.37+01"}
  "ppx_jane"         {= "v0.17~preview.128.37+01"}
  "ppx_sexp_conv"    {= "v0.17~preview.128.37+01"}
  "stdio"            {= "v0.17~preview.128.37+01"}
  "topological_sort" {= "v0.17~preview.128.37+01"}
  "dune"             {>= "2.0.0"}
  "ppxlib"           {>= "0.28.0"}
  "zarith"           {>= "1.11"}
]
available: arch != "arm32" & arch != "x86_32"
synopsis: "RTL Hardware Design in OCaml"
description: "
Hardcaml is an embedded DSL for designing and simulating hardware in OCaml.
Generic hardware designs are easily expressed using features such as higher
order functions, lists, maps etc.  A built in simulator allows designs to
be simulated within Hardcaml.  Designs are converted to either Verilog or
VHDL to interact with standard back end tooling.
"
url {
src: "https://github.com/janestreet/hardcaml/archive/cb8aacbcd4dbb0ad92f7db01f9ef12b3e161b5bf.tar.gz"
checksum: "sha256=1d347c2bb05bede0b6af13fdda90b9db118d977bcffc21bc8b97d5045bc02843"
}
