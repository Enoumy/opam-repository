opam-version: "2.0"
maintainer: "Jane Street developers"
authors: ["Jane Street Group, LLC"]
homepage: "https://github.com/janestreet/parsexp"
bug-reports: "https://github.com/janestreet/parsexp/issues"
dev-repo: "git+https://github.com/janestreet/parsexp.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/parsexp/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"    {>= "4.08.0"}
  "sexplib0" {= "v0.16~preview.128.12+239"}
  "dune"     {>= "2.0.0"}
]
available: arch != "arm32" & arch != "x86_32"
synopsis: "S-expression parsing library"
description: "
This library provides generic parsers for parsing S-expressions from
strings or other medium.

The library is focused on performances but still provide full generic
parsers that can be used with strings, bigstrings, lexing buffers,
character streams or any other sources effortlessly.

It provides three different class of parsers:
- the normal parsers, producing [Sexp.t] or [Sexp.t list] values
- the parsers with positions, building compact position sequences so
  that one can recover original positions in order to report properly
  located errors at little cost
- the Concrete Syntax Tree parsers, produce values of type
  [Parsexp.Cst.t] which record the concrete layout of the s-expression
  syntax, including comments

This library is portable and doesn't provide IO functions. To read
s-expressions from files or other external sources, you should use
parsexp_io.
"
url {
src: "https://github.com/janestreet/parsexp/archive/a97b6c7cdb0e70051f72f8e9a2d914d020bbf46e.tar.gz"
checksum: "sha256=0000c612b1f637e4ab232c17a9485900e37a70d58b84244f82a81d24cde363b4"
}
